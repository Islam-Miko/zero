name: RUn test build and Publish of Docker Hub
on:
  push:
    branches:
      - "*"

jobs:
  run_tests:
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: zero_db
        ports: ['5432:5432']
    strategy:
      matrix:
        poetry-version: ["1.1.13"]
    env:
      TEST: zero-test


    runs-on: [ubuntu-latest]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      # - uses: actions/setup-python@v1
      #   with:
      #     python-version: "3.9"
      # - name: Install poetry
      #   uses: abatilo/actions-poetry@v2.1.3
      #   with:
      #     poetry-version: ${{ matrix.poetry-version }}
      # - name: Install Dependencies
      #   run: poetry install
      # - name: Run tests
      #   env:
      #     TESTING: TRUE
      #     DATABASE_URL: 'postgresql+asyncpg://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/zero_db'
      #   run: poetry run pytest .
      - name: Build test image
        run: docker build -t $TEST --target=test .
        env:
          TESTING: TRUE
          DATABASE_URL: 'postgresql+asyncpg://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/zero_db'
      - name: Run test
        run: docker run $TEST
  build_and_pub:
    needs: [run_tests]
    runs-on: [ubuntu-latest]
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      NAME: ${{ secrets.DOCKER_REPO }}
    steps:
      - name: Login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@v3
      - name: Build image
        run: docker build -t $LOGIN/$NAME:v1 -f Dockerfile .
      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:v1
